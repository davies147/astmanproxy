Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 astmanproxy (1.26-6) unstable; urgency=low
 .
   * Clean up memory leak in msg-stack code.
Author: root <steved@ipcortex.co.uk>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- astmanproxy-1.26.orig/src/proxyfunc.c
+++ astmanproxy-1.26/src/proxyfunc.c
@@ -465,9 +465,11 @@ int do_AddToStack(char *uniqueid, struct
 			}
 			if( m_size < MAX_STACKDATA && (msg = malloc(m_size)) ) {
 				memset(msg, 0, m_size);
-				if( withbody == 1 )
+				if( withbody == 1 ) {
+					if( t->message )
+						free( t->message );
 					t->message = msg;
-				else {
+				} else {
 					if( t->state )
 						free( t->state );
 					t->state = msg;
@@ -561,6 +563,8 @@ void DelFromStack(struct message *m, str
 		{
 			if( t->message )
 				free( t->message );
+			if( t->state )
+				free( t->state );
 			if( prev )
 				prev->next = t->next;
 			else
@@ -590,6 +594,8 @@ void FreeStack(struct mansession *s)
 		n = t->next;		// Grab next entry BEFORE we free the slot
 		if( t->message )
 			free( t->message );
+		if( t->state )
+			free( t->state );
 		free( t );
 		t = n;
 		s->depth--;
