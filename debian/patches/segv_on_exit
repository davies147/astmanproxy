Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 astmanproxy (1.26-5) unstable; urgency=low
 .
   * Clean up an unclean exit with segfault
Author: root <steved@ipcortex.co.uk>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- astmanproxy-1.26.orig/src/common.c
+++ astmanproxy-1.26/src/common.c
@@ -71,10 +71,10 @@ int get_input(struct mansession *s, char
 	fds[0].events = POLLIN;
 	do {
 		res = poll(fds, 1, haveline?0:-1);
+		if (s->dead)
+			return -1;
 		if (res < 0) {
 			if (errno == EINTR) {
-				if (s->dead)
-					return -1;
 				continue;
 			}
 			if (debug)
--- astmanproxy-1.26.orig/src/astmanproxy.c
+++ astmanproxy-1.26/src/astmanproxy.c
@@ -72,18 +72,15 @@ void leave(int sig) {
 	AddHeader(&cm, PROXY_SHUTDOWN);
 
 	if (debug)
-	debugmsg("Notifying and closing sessions");
+		debugmsg("Notifying and closing sessions");
 	pthread_rwlock_wrlock(&sessionlock);
 	while (sessions) {
 		c = sessions;
 		sessions = sessions->next;
 
-		if( c->t ) {
-			ts.tv_sec = 1;	/* Timed join prevents us blocking */
-			ts.tv_nsec = 0;
-			pthread_cancel( c->t );
-			pthread_timedjoin_np( c->t, &res, &ts );
-		}
+		pthread_mutex_lock(&c->lock);
+		c->dead = 1;
+		pthread_mutex_unlock(&c->lock);
 		if (c->server) {
 			if (debug)
 				debugmsg("asterisk@%s: closing session", ast_inet_ntoa(iabuf, sizeof(iabuf), c->sin.sin_addr));
@@ -95,6 +92,12 @@ void leave(int sig) {
 			c->output->write(c, &cm);
 			logmsg("Shutdown, closed client %s", ast_inet_ntoa(iabuf, sizeof(iabuf), c->sin.sin_addr));
 		}
+		if( c->t ) {
+			ts.tv_sec = 1;	/* Timed join prevents us blocking */
+			ts.tv_nsec = 0;
+			pthread_cancel( c->t );
+			pthread_timedjoin_np( c->t, &res, &ts );
+		}
 		close_sock(c->fd);	/* close tcp & ssl socket */
 		FreeStack(c);
 		pthread_mutex_destroy(&c->lock);
