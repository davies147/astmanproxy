Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 astmanproxy (1.26-12) unstable; urgency=low
 .
   * Remember to clear s->dead when reconnecting to Asterisk
   * Don't send closing cr/lf on a dead connection.
Author: root <steved@ipcortex.co.uk>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- astmanproxy-1.26.orig/src/standard.c
+++ astmanproxy-1.26/src/standard.c
@@ -80,11 +80,13 @@ int _write(struct mansession *s, struct
 		if ( res < 0 )
 			s->dead = 1;
 	}
-	memcpy( &w_buf[at], "\r\n", 2 );
-	at += 2;
-	res = ast_carefulwrite(s, w_buf, at);
-	if ( res < 0 )
-		s->dead = 1;
+	if (!s->dead) {
+		memcpy( &w_buf[at], "\r\n", 2 );
+		at += 2;
+		res = ast_carefulwrite(s, w_buf, at);
+		if ( res < 0 )
+			s->dead = 1;
+		}
 	pthread_mutex_unlock(&s->lock);
 
 	return 0;
--- astmanproxy-1.26.orig/src/astmanproxy.c
+++ astmanproxy-1.26/src/astmanproxy.c
@@ -560,8 +560,8 @@ int ConnectAsterisk(struct mansession *s
 	/* Don't try to do this if auth has already failed! */
 	if (s->connected < 0 )
 		return 1;
-	else
-		s->connected = 0;
+	s->connected = 0;
+	s->dead = 0;
 
 	if (debug)
 	debugmsg("asterisk@%s: Connecting (u=%s, p=%s, ssl=%s)", ast_inet_ntoa(iabuf, sizeof(iabuf), s->sin.sin_addr),
